import{_ as l,o as p,c as o,a as s,b as D,d as n,e,r as c}from"./app.a81d06d1.js";const r={},t=s("h1",{id:"js-promise-\u4F7F\u7528",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#js-promise-\u4F7F\u7528","aria-hidden":"true"},"#"),n(" JS - Promise \u4F7F\u7528")],-1),y=s("h2",{id:"\u4E00\u3001\u4EC0\u4E48\u662F-promise",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u4E00\u3001\u4EC0\u4E48\u662F-promise","aria-hidden":"true"},"#"),n(" \u4E00\u3001\u4EC0\u4E48\u662F Promise")],-1),C=n("A\xA0"),i={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},E=s("code",null,"Promise",-1),A=n("\xA0is an object representing the eventual completion or failure of an asynchronous operation."),d=e(`<p>\u4ECE\u5B98\u65B9\u6587\u6863\u6211\u4EEC\u53EF\u77E5</p><ul><li>Promise \u662F ES6 \u65B0\u589E\u7684\u4E00\u4E2A\u5BF9\u8C61,\u4E00\u4E2A\u6784\u9020\u51FD\u6570</li><li>\u7528\u4E8E\u591A\u5C42\u6B21\u5F02\u6B65\u64CD\u4F5C\u4EE5\u540C\u6B65\u64CD\u4F5C\u7684\u6D41\u7A0B\u8868\u8FBE\u51FA\u6765\uFF0C\u907F\u514D\u4E86\u5C42\u5C42\u5D4C\u5957\u7684\u56DE\u8C03\u51FD\u6570\u5730\u72F1</li></ul><h3 id="_1-1-promise-\u7684\u4E09\u79CD\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#_1-1-promise-\u7684\u4E09\u79CD\u72B6\u6001" aria-hidden="true">#</a> 1.1 Promise \u7684\u4E09\u79CD\u72B6\u6001</h3><ul><li>pending: \u521D\u59CB\u72B6\u6001\uFF0C\u65E2\u4E0D\u662F\u6210\u529F\uFF0C\u4E5F\u4E0D\u662F\u5931\u8D25\u72B6\u6001\u3002</li><li>fulfilled: \u610F\u5473\u7740\u64CD\u4F5C\u6210\u529F\u5B8C\u6210\u3002</li><li>rejected: \u610F\u5473\u7740\u64CD\u4F5C\u5931\u8D25\u3002</li></ul><p>\u4EC0\u4E48\u610F\u601D\u5462?\u4E09\u79CD\u72B6\u6001\u5BF9\u5E94\u5F02\u6B65\u64CD\u4F5C\u7684\u4E09\u79CD\u60C5\u51B5,\u6BD4\u5982\u53D1\u9001\u4E00\u6B21 ajax \u8BF7\u6C42,\u521D\u59CB\u7B49\u5F85\u65F6,\u72B6\u6001\u4E3A pending,ajax \u8BF7\u6C42\u6210\u529F\u65F6,\u8C03\u7528 Promise \u5185\u7F6E\u51FD\u6570 resolve(), Promise \u72B6\u6001 =&gt; fulfilled,\u8BF7\u6C42\u5931\u8D25\u65F6,\u8C03\u7528\u51FD\u6570 reject(),Promise \u72B6\u6001 =&gt; rejected</p><h2 id="\u4E8C\u3001promise-\u57FA\u672C\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001promise-\u57FA\u672C\u7528\u6CD5" aria-hidden="true">#</a> \u4E8C\u3001Promise \u57FA\u672C\u7528\u6CD5</h2><blockquote><p><code>var Promise: PromiseConstructor new &lt;any&gt;(executor: (resolve: (value?: any) =&gt; void, reject: (reason?: any) =&gt; void) =&gt; void) =&gt; Promise&lt;any&gt;</code></p></blockquote><p>\u4ECE\u8BED\u6CD5\u4E0A\u6765\u770B,Promise \u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570,\u9700\u8981\u4F20\u5165\u4E00\u4E2A\u53C2\u6570 executor \u51FD\u6570. new Promise \u65F6\u4F1A\u8C03\u7528 executor \u51FD\u6570\uFF0C executor \u51FD\u6570\u4E5F\u6709\u4E24\u4E2A\u53C2\u6570.resolve \u548C reject,\u8FD9\u4E24\u4E2A\u53C2\u6570\u4E5F\u662F\u51FD\u6570,\u8C03\u7528 resolve \u6216 reject \u65F6\uFF0C\u5206\u522B\u5C06 promise \u7684\u72B6\u6001\u6539\u4E3A fulfilled\uFF08\u5B8C\u6210\uFF09\u6216 rejected\uFF08\u5931\u8D25\uFF09\u3002Promise \u72B6\u6001\u53EA\u80FD\u552F\u4E00</p><h3 id="_2-1-promise-\u57FA\u672C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_2-1-promise-\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a> 2.1 Promise \u57FA\u672C\u4F7F\u7528</h3><p>\u4E0B\u9762\u6765\u770B\u4E24\u4E2A\u4F8B\u5B50</p><p>(1) \u57FA\u672C\u8BED\u6CD5</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">promise</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">\u5F02\u6B65\u8BF7\u6C42\u6210\u529F</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">reject</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">  () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">//success</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">//failure</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre></div><p>(2) \u7528\u5B9A\u65F6\u5668 setTimeout \u6A21\u62DF\u5F02\u6B65\u8BF7\u6C42\u6210\u529F</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">ajax</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1000</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">ajax</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;request success&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">//success</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre></div><p>\u4E0A\u9762\u4EE3\u7801\u8868\u793A\uFF0C\u5982\u679C\u5F02\u6B65\u64CD\u4F5C\u6210\u529F\uFF0C\u5C31\u8C03\u7528 resolve()\u65B9\u6CD5,\u5C31\u4F1A\u6267\u884C Promise \u5B9E\u4F8B then()\u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570,\u5982\u679C\u5931\u8D25\u5219\u8C03\u7528 then()\u65B9\u6CD5\u7684\u7B2C\u4E8C\u4E2A\u56DE\u8C03\u51FD\u6570.</p><h3 id="_2-2-promise-\u4F7F\u7528\u65F6\u4F20\u53C2" tabindex="-1"><a class="header-anchor" href="#_2-2-promise-\u4F7F\u7528\u65F6\u4F20\u53C2" aria-hidden="true">#</a> 2.2 Promise \u4F7F\u7528\u65F6\u4F20\u53C2</h3><p>resolve()\u548C reject()\u51FD\u6570\u8C03\u7528\u65F6\u53EF\u4F20\u53C2,\u4F20\u5165\u7684\u53C2\u6570\u4F1A\u88AB Promise \u5B9E\u4F8B then \u548C catch \u65B9\u6CD5\u6355\u83B7.</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">promise</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">\u5F02\u6B65\u8BF7\u6C42\u6210\u529F</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;success&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">reject</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;error&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">// success</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#6A9955;">//\u6355\u83B7\u5F02\u5E38\u53EF\u7528catch()\u65B9\u6CD5</span></span>
<span class="line"><span style="color:#9CDCFE;">promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">catch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">// error</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-3-promise-\u94FE\u5F0F\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#_2-3-promise-\u94FE\u5F0F\u8C03\u7528" aria-hidden="true">#</a> 2.3 Promise \u94FE\u5F0F\u8C03\u7528</h3><p>Promise \u5F3A\u5927\u7684\u5730\u65B9\u5728\u4E8E\u6B64,\u5982\u679C\u53D1\u9001\u4E00\u4E2A\u5F02\u6B65\u8BF7\u6C42,\u53C8\u8FD4\u56DE\u53E6\u5916\u4E00\u4E2A\u5F02\u6B65\u8BF7\u6C42\u65F6,\u53EF\u7528\u94FE\u5F0F\u8C03\u7528</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> + </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    })</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> + </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    })</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">// 6</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"></span></code></pre></div><hr><p>\u5F53\u5BF9\u5F02\u6B65\u8BF7\u6C42\u8FD4\u56DE\u7ED3\u679C res \u7684\u64CD\u4F5C\u7B80\u5355\u64CD\u4F5C\u65F6,\u53EF\u7528 Promise.resolve()\u7B80\u5199</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> + </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> + </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">// 6</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"></span></code></pre></div><hr><p>\u8FD8\u6709\u4E00\u79CD\u66F4\u7B80\u5355\u7684\u8BED\u6CD5\u7CD6</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> + </span><span style="color:#B5CEA8;">2</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> + </span><span style="color:#B5CEA8;">3</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">// 6</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-4-\u94FE\u5F0F\u8C03\u7528\u6CE8\u610F\u4E8B\u9879" tabindex="-1"><a class="header-anchor" href="#_2-4-\u94FE\u5F0F\u8C03\u7528\u6CE8\u610F\u4E8B\u9879" aria-hidden="true">#</a> 2.4 \u94FE\u5F0F\u8C03\u7528\u6CE8\u610F\u4E8B\u9879</h3><p>\u94FE\u5F0F\u8C03\u7528\uFF08chaining\uFF09\u6309\u5E8F\u6267\u884C,\u6709\u4EE5\u4E0B\u7EA6\u5B9A,\u4F7F\u7528\u65F6\u8981\u591A\u6CE8\u610F.</p><ul><li>\u5728\u672C\u8F6E \xA0 \u4E8B\u4EF6\u5FAA\u73AF\u8FD0\u884C\u5B8C\u6210\u4E4B\u524D\uFF0C\u56DE\u8C03\u51FD\u6570\u662F\u4E0D\u4F1A\u88AB\u8C03\u7528\u7684\u3002</li><li>\u5373\u4F7F\u5F02\u6B65\u64CD\u4F5C\u5DF2\u7ECF\u5B8C\u6210\uFF08\u6210\u529F\u6216\u5931\u8D25\uFF09\uFF0C\u5728\u8FD9\u4E4B\u540E\u901A\u8FC7 \xA0then()\u6DFB\u52A0\u7684\u56DE\u8C03\u51FD\u6570\u4E5F\u4F1A\u88AB\u8C03\u7528</li><li>\u901A\u8FC7\u591A\u6B21\u8C03\u7528 then() \u53EF\u4EE5\u6DFB\u52A0\u591A\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u5B83\u4EEC\u4F1A\u6309\u7167\u63D2\u5165\u987A\u5E8F\u6267\u884C</li></ul><p>\u770B\u4E0B\u9762\u7684\u4F8B\u5B50</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"></span></code></pre></div><hr><p>\u53EA\u8981\u89E6\u53D1\u4E86\u4E00\u6B21 resolve(),\u94FE\u4E0A\u7684\u6240\u6709 then \u90FD\u4F1A\u88AB\u8C03\u7528,\u5F53\u7136\u540E\u9762\u7684\u6CA1\u6709\u8C03\u7528 resolve \u81EA\u7136\u62FF\u4E0D\u5230\u64CD\u4F5C\u6570.</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">catch</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// no execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"></span></code></pre></div><hr><p>\u4E2D\u95F4\u7A7F\u63D2 catch(),\u5176\u540E\u7684 then \u4E5F\u4F1A\u88AB\u6267\u884C</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">reject</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// no execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">catch</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"></span></code></pre></div><hr><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">reject</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// no execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">catch</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"></span></code></pre></div><p>\u6355\u83B7 reject()\u540E\u7684 then \u4F1A\u88AB\u6267\u884C</p><hr><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// execute</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">throw</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Error</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// no execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">catch</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;execute&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// execute</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"></span></code></pre></div><hr><p>\u60C5\u51B5\u6709\u5F88\u591A\u79CD,\u600E\u4E48\u53BB\u7406\u89E3\u5462,\u770B\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">arr</span><span style="color:#D4D4D4;"> = [</span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bar&#39;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">forEach</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">res</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;why&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  }).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">res</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// why\u3001foo\u3001why\u3001bar</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre></div><p>res \u4F1A\u62FF\u5230 Promise resolve()\u7684\u64CD\u4F5C\u6570\u8F93\u51FA\u7ED3\u679C\u4E3A why\u3001foo\u3001why\u3001bar</p><hr><p>\u628A return res \u6CE8\u91CA\u53D1\u73B0,\u4ECD\u7136\u53EF\u4EE5\u8F93\u51FA\u7ED3\u679C,\u76F8\u5F53\u4E8E\u6267\u884C\u4E86 Promise.resolve(),catch()\u4E2D\u540C\u7406</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">arr</span><span style="color:#D4D4D4;"> = [</span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bar&#39;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">forEach</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">res</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;why&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  }).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// return res</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// Promise.resolve()</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// undefined\u3001foo\u3001undefined\u3001bar</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre></div><p>\u603B\u7ED3 :then(),catch()\u89E6\u53D1\u540E,\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u7684 resolve()</p><h2 id="\u4E09\u3001promise-\u5185\u7F6E\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001promise-\u5185\u7F6E\u65B9\u6CD5" aria-hidden="true">#</a> \u4E09\u3001Promise \u5185\u7F6E\u65B9\u6CD5</h2><h3 id="_3-1-promise-all" tabindex="-1"><a class="header-anchor" href="#_3-1-promise-all" aria-hidden="true">#</a> 3.1 Promise.all()</h3><p>Promise.all(iterable) \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A Promise \u5B9E\u4F8B\uFF0C\u6B64\u5B9E\u4F8B\u5728 iterable \u8FED\u4EE3\u5668 \u53C2\u6570\u5185\u6240\u6709\u7684 promise \u90FD\u201C\u5B8C\u6210\uFF08resolved\uFF09\u201D\u6216\u53C2\u6570\u4E2D\u4E0D\u5305\u542B promise \u65F6\u56DE\u8C03\u5B8C\u6210\uFF08resolve\uFF09\uFF1B</p><p>\u5982\u679C\u53C2\u6570\u4E2D promise \u6709\u4E00\u4E2A\u5931\u8D25\uFF08rejected\uFF09\uFF0C\u6B64\u5B9E\u4F8B\u56DE\u8C03\u5931\u8D25\uFF08reject\uFF09\uFF0C\u5931\u8D25\u7684\u539F\u56E0\u662F\u7B2C\u4E00\u4E2A\u5931\u8D25 promise \u7684\u7ED3\u679C\u3002</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;res1&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;res2&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">all</span><span style="color:#D4D4D4;">([</span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;">]).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">// [&quot;res1&quot;, &quot;res2&quot;]</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre></div><hr><p>\u6355\u83B7\u5F02\u5E38\u7ED3\u679C err \u4E3A\u54CD\u5E94\u901F\u5EA6\u5FEB\u7684</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">reject</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;err1&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  }, </span><span style="color:#B5CEA8;">1000</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">reject</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;err2&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  }, </span><span style="color:#B5CEA8;">2000</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">all</span><span style="color:#D4D4D4;">([</span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;">]).</span><span style="color:#DCDCAA;">catch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">//err1</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre></div><h3 id="_3-2-promise-race" tabindex="-1"><a class="header-anchor" href="#_3-2-promise-race" aria-hidden="true">#</a> 3.2 Promise.race()</h3><ul><li>race \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A Promise\uFF0C\u5B83\u5C06\u4E0E\u7B2C\u4E00\u4E2A\u4F20\u9012\u7684 promise \u76F8\u540C\u7684\u5B8C\u6210\u65B9\u5F0F\u88AB\u5B8C\u6210\u3002\u5B83\u53EF\u4EE5\u662F\u5B8C\u6210\uFF08 resolves\uFF09\uFF0C\u4E5F\u53EF\u4EE5\u662F\u5931\u8D25\uFF08rejects\uFF09\uFF0C\u8FD9\u8981\u53D6\u51B3\u4E8E\u7B2C\u4E00\u4E2A\u5B8C\u6210\u7684\u65B9\u5F0F\u662F\u4E24\u4E2A\u4E2D\u7684\u54EA\u4E2A\u3002</li><li>\u5982\u679C\u4F20\u7684\u8FED\u4EE3\u662F\u7A7A\u7684\uFF0C\u5219\u8FD4\u56DE\u7684 promise \u5C06\u6C38\u8FDC\u7B49\u5F85\u3002</li><li>\u5982\u679C\u8FED\u4EE3\u5305\u542B\u4E00\u4E2A\u6216\u591A\u4E2A\u975E\u627F\u8BFA\u503C\u548C/\u6216\u5DF2\u89E3\u51B3/\u62D2\u7EDD\u7684\u627F\u8BFA\uFF0C\u5219 Promise.race \u5C06\u89E3\u6790\u4E3A\u8FED\u4EE3\u4E2D\u627E\u5230\u7684\u7B2C\u4E00\u4E2A\u503C\u3002</li></ul><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;res1&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  }, </span><span style="color:#B5CEA8;">3000</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">reject</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;err2&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  }, </span><span style="color:#B5CEA8;">2000</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">race</span><span style="color:#D4D4D4;">([</span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"><span style="color:#D4D4D4;">  .</span><span style="color:#DCDCAA;">catch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">err</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">//err2</span></span>
<span class="line"><span style="color:#D4D4D4;">  })</span></span>
<span class="line"></span></code></pre></div><p>then,catch \u53EA\u4F1A\u8C03\u7528\u4E8C\u8005\u5176\u4E00,\u5E76\u4E14\u53D6\u51B3\u4E8E\u8FED\u4EE3\u5668\u4E2D\u53C2\u6570\u7684\u54CD\u5E94\u901F\u5EA6</p><h3 id="_3-3-promise-allsettled" tabindex="-1"><a class="header-anchor" href="#_3-3-promise-allsettled" aria-hidden="true">#</a> 3.3 Promise.allSettled()</h3><p>Promise.allSettled()\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5728\u6240\u6709\u7ED9\u5B9A\u7684 promise \u5DF2\u88AB\u51B3\u8BAE\u6216\u88AB\u62D2\u7EDD\u540E\u51B3\u8BAE\u7684 promise\uFF0C\u5E76\u5E26\u6709\u4E00\u4E2A\u5BF9\u8C61\u6570\u7EC4\uFF0C\u6BCF\u4E2A\u5BF9\u8C61\u8868\u793A\u5BF9\u5E94\u7684 promise \u7ED3\u679C</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;res1&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">reject</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;res2&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">allSettled</span><span style="color:#D4D4D4;">([</span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;">]).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">// [{status: &quot;fulfilled&quot;, value: &quot;res1&quot;},</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">//  {status: &quot;rejected&quot;, reason: &quot;res2&quot;}]</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre></div><p>\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\u6570\u7EC4,\u5305\u542B iterator \u6240\u6709\u53C2\u6570 Promise \u7684\u72B6\u6001\u548C\u7ED3\u679C</p>`,67);function h(u,g){const a=c("ExternalLinkIcon");return p(),o("div",null,[t,y,s("blockquote",null,[s("p",null,[C,s("a",i,[E,D(a)]),A])]),d])}var v=l(r,[["render",h],["__file","js-promise.html.vue"]]);export{v as default};
