import{_ as e,o as t,c as r,e as a}from"./app.a81d06d1.js";const i={},s=a('<h1 id="python" tabindex="-1"><a class="header-anchor" href="#python" aria-hidden="true">#</a> Python</h1><h2 id="first-start" tabindex="-1"><a class="header-anchor" href="#first-start" aria-hidden="true">#</a> First, start</h2><p>Name files and folders in lowercase, with underscores instead of spaces</p><p><code>execute python main.py</code></p><p>Easy to read &gt; easy to write indent = 4 space lines no longer than 80 characters comments no longer than 72 characters operators with spaces around them</p><p>print(??,end=&#39;&#39;) nowrap</p><h2 id="second-variables" tabindex="-1"><a class="header-anchor" href="#second-variables" aria-hidden="true">#</a> Second, variables</h2><p>Alphanumeric underscore starts, cannot start with numbers</p><p>Avoid capital letter variable names</p><p>Traceback: Traceback record. Point out the interpreter running error</p><p>str.title() capitalize the first character</p><p>str.upper() all characters uppercase</p><p>str.lower() all characters are lowercase</p><p>\\t tab \\n newline</p><p>rstrip() blank at the end lstrip() at the beginning strip() at both ends temporary</p><p>+ - * \\ Use () to change the priority of the operation</p><p>str() int-&gt;str int() str-&gt;int</p><h2 id="_3-list" tabindex="-1"><a class="header-anchor" href="#_3-list" aria-hidden="true">#</a> 3. List</h2><p>Plural list names are a good idea</p><p>index -1 is the last element of the list</p><p>append() add at the end</p><p>insert(index,el) anywhere</p><p>extend() is different from the insertion list, dictionary, str -&gt; &#39;s&#39;, &#39;t&#39;, &#39;r&#39;, split it in the insertion list, the dictionary inserts the key</p><p>del arr[0] keyword delete according to index</p><p>pop() removes and returns the last pop(index) pops anywhere</p><p>remove() removes only one at a time based on value</p><p>sort() A-Z a-z order sort(reverse=True) Reverse list method arr.sort()</p><p>sorted() temporary sorting global method sorted(arr,reverse=True)</p><p>reverse() reverse order permanently change</p><p>len(arr) length return number</p><h2 id="four-operation-list" tabindex="-1"><a class="header-anchor" href="#four-operation-list" aria-hidden="true">#</a> Four, operation list</h2><p>for _ in _s : the colon cannot be missing</p><p>The code indented under the for is part of the loop</p><p>range(start,stop,step) does not include stop</p><p>list(tuple) -&gt; list list(range())</p><p>min(list) the smallest number in the list max() sum() summation</p><p>List comprehension arr = [value*2 for value in range(1,11)] for statement without :</p><p>slice [0:3] index 0 1 2 three el</p><p>[:?] 0 ~? [0:] all</p><p>[start,stop,step] step default 1 left to right if step = -1 r to l</p><p>copy list arr_ = arr[:] copy text</p><p>arr = arr_ = [] changes the pointer to the same list</p><p>An immutable list is called a tuple tuple = ( ) tuple[0] can&#39;t modify</p><p>tuple[0] = ? error tuple = new tuple success</p><h2 id="five-if-statement" tabindex="-1"><a class="header-anchor" href="#five-if-statement" aria-hidden="true">#</a> Five, if statement</h2><p>if: elif: else: colon is indispensable</p><p>and or logical and logical or</p><p>in el in list return true/false</p><p>not in</p><p>True/False uppercase</p><p>arr = [] if arr: False is different from js empty array is also 1</p><h2 id="six-dictionary" tabindex="-1"><a class="header-anchor" href="#six-dictionary" aria-hidden="true">#</a> Six, dictionary</h2><p>Dictionary is unordered</p><p>The key must be quoted, and the access is the same, only the [] access method</p><p>del key delete key-value pair</p><p>dict.items() return list of contain key,value dict.keys() dict.values()</p><p>Traverse dictionary key-value pairs for key,value in dict.items():</p><p>Traversing the dictionary directly is the default traversal dict.keys(): = dict:</p><p>In-order traversal Sorting the list returned by items().. etc. sorted(list) You cannot use list.sort() class list</p><p>set(dict.values()) returns the unique value key itself unique set(sorted()) unique after arrangement</p><h2 id="seven-user-input-and-while-loop" tabindex="-1"><a class="header-anchor" href="#seven-user-input-and-while-loop" aria-hidden="true">#</a> Seven, user input and while loop</h2><p>input(prompt) prompt contains a space at the end to separate the prompt and user input</p><p>while():</p><p>Use the flag sign/? = True/False</p><p>break to exit the loop</p><p>continue skip the current time</p><p>The list or dictionary should not be modified when looping, otherwise there will be unexpected errors. You can modify the copy of the list by modifying</p>',67),n=[s];function p(o,l){return t(),r("div",null,n)}var h=e(i,[["render",p],["__file","python.html.vue"]]);export{h as default};
