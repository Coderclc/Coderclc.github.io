import{_ as e,o as a,c as t,e as r}from"./app.a81d06d1.js";const i={},o=r('<h1 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> Git</h1><h2 id="working-status" tabindex="-1"><a class="header-anchor" href="#working-status" aria-hidden="true">#</a> Working status</h2><p>Working directory workspace add -&gt; Staging temporary storage area commit -&gt; Local Repository local warehouse</p><h2 id="file-status" tabindex="-1"><a class="header-anchor" href="#file-status" aria-hidden="true">#</a> File status</h2><p>Four statuses of files: Untracked, Unmodified, Modified, Staged</p><h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands" aria-hidden="true">#</a> Commands</h2><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> Config</h3><p><code>git config --global user.name</code></p><p><code>git config --global user.email</code></p><h3 id="restore" tabindex="-1"><a class="header-anchor" href="#restore" aria-hidden="true">#</a> Restore</h3><p><code>git restore ./&lt;file&gt;</code> Reverts all changes to /file workspace</p><p><code>git restore \u2014staged ./&lt;file&gt;</code> Restores all changes in the /file staging area to the workspace</p><h3 id="reset" tabindex="-1"><a class="header-anchor" href="#reset" aria-hidden="true">#</a> Reset</h3><p><code>git reset</code></p><ul><li><code>\u2014mixed</code> The default is <code>mixed</code> to roll back to a certain version and leave all changes in the workspace</li><li><code>-soft</code> rolls back to a certain version and leaves all changes in the staging area</li><li><code>\u2014hard</code> discard all changes</li></ul><h3 id="reflog" tabindex="-1"><a class="header-anchor" href="#reflog" aria-hidden="true">#</a> Reflog</h3><p><code>git reflog</code> operation history</p><h3 id="ls-files" tabindex="-1"><a class="header-anchor" href="#ls-files" aria-hidden="true">#</a> Ls-Files</h3><p><code>git ls-files</code> View the contents of the staging area</p><h2 id="commit" tabindex="-1"><a class="header-anchor" href="#commit" aria-hidden="true">#</a> Commit</h2><p><code>git commit -a -m &#39;&#39;</code></p><p><code>git commit -am &#39;&#39;</code></p><h2 id="rm" tabindex="-1"><a class="header-anchor" href="#rm" aria-hidden="true">#</a> Rm</h2><p><code>git rm &lt;file&gt;</code> deletes files from the workspace and staging area</p><p><code>git rm \u2014cached &lt;file&gt;</code> The file is deleted from the staging area and retained in the workspace</p><h2 id="log" tabindex="-1"><a class="header-anchor" href="#log" aria-hidden="true">#</a> Log</h2><p><code>git log --graph --oneline --decorate -all</code></p><h2 id="rebase" tabindex="-1"><a class="header-anchor" href="#rebase" aria-hidden="true">#</a> Rebase</h2><p><code>git rebase</code> finds the ancestors of the current branch and the target branch, and then grafts the commit after the common ancestor of the current branch to the target branch</p><h2 id="review" tabindex="-1"><a class="header-anchor" href="#review" aria-hidden="true">#</a> Review</h2><ul><li><p>.gitignore cannot be a file that has been added to the repository</p></li><li><p>alias graph=&quot;git log --graph --oneline --decorate&quot;</p></li><li><p>git config --global alias.graph &quot;log --graph --oneline --decorate&quot;</p></li></ul>',31),d=[o];function h(c,s){return a(),t("div",null,d)}var l=e(i,[["render",h],["__file","git.html.vue"]]);export{l as default};
