import{_ as p,o as h,c as u,b as t,w as s,a as e,e as n,d as i,r as l}from"./app.a81d06d1.js";const m={},g=n('<h1 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> Css</h1><h2 id="hack" tabindex="-1"><a class="header-anchor" href="#hack" aria-hidden="true">#</a> Hack</h2><h3 id="element" tabindex="-1"><a class="header-anchor" href="#element" aria-hidden="true">#</a> Element</h3>',3),f=e("h3",{id:"background-clip",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#background-clip","aria-hidden":"true"},"#"),i(" Background-clip")],-1),b=e("h3",{id:"ikun",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ikun","aria-hidden":"true"},"#"),i(" IKun")],-1),y=e("h2",{id:"review",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#review","aria-hidden":"true"},"#"),i(" Review")],-1),_=n("<li><p>selector + declaration block</p></li><li><p>The range of element selectors is too wide, the range of ID selectors is too narrow, and class selectors are most suitable</p></li><li><p>must end with a semicolon</p></li><li><p>user-agent browser user default style sheet, different browsers are different</p></li><li><p>What are the values \u200B\u200Bof color?</p><ul><li>name</li><li>RGBA -&gt; Red Green Blue Alpha</li><li>HSL -&gt; Hue (hue) Saturation (saturation) Luminance (brightness)</li><li>HEX hexadecimal notation</li></ul></li><li><p>What are the ways to make the font bold?</p><ul><li><strong>font-weight</strong></li><li><strong><code>&lt;strong&gt;</code></strong></li></ul></li><li><p>What are the methods for italics?</p><ul><li><em>font-style: italic</em></li><li><em><code>&lt;i&gt; &lt;em&gt;</code></em></li></ul></li><li><p>What are the text decorations?</p><ul><li><code>&lt;del&gt;</code><del>Deprecated Content</del></li><li><code>&lt;s&gt;</code><s>Expired Content</s></li><li><s>text-decoration:line-through overline</s></li></ul></li><li><p>Talk about the rules of style priority</p><ul><li>!important</li><li>Introducing method, inline is greater than embedding and external chain. Embedding and external chain look at the order of introduction, the latter covers the former</li><li>Priority of selectors id selector &gt; (class selector | pseudo-class selector | attribute selector ) &gt; (descendant selector | pseudo-element selector ) &gt; (child selector | adjacent selector) &gt; wildcard selector</li><li>inherited styles</li><li>Browser default style</li></ul></li><li><p>font-family can set multiple values, provided that the user&#39;s computer has this font</p></li><li><p>text-indent text indent</p></li><li><p>letter-spacing character spacing</p></li><li><p><code>&lt;iframe&gt;</code> for embedding in web pages</p></li><li><p><code>&lt;object&gt; &lt;embed&gt;</code> for embedding flash</p></li>",14),v={href:"https://developer.mozilla.org/zh-CN/docs/Glossary/MIME_type",target:"_blank",rel:"noopener noreferrer"},x=i("MIME"),w=i(" Multipurpose Internet Mail Extension Type"),k=n(`<li><p>Pseudo-class selector love-hate law lvha <code>:hover</code> hover <code>:active</code> activate <code>:link</code> not visited <code>:visited</code> visited</p></li><li><p><code>a:first-child</code> must be the a element and must be the first a element in the queue</p></li><li><p><code>:first-of-type</code> selects the first element in the a element</p></li><li><p><code>::first-letter</code> the first character of the content of the selected element</p></li><li><p><code>::first-line</code> selects the first line of the content of the element</p></li><li><p><code>::selection</code> the content of the box selection</p></li><li><p><code>::placeholder</code> changes the color of the placeholder</p></li><li><p>Element selectors: blank child, &gt; next generation, + next sibling, ~ all siblings after</p></li><li><p><code>outline</code> can only set the border of four sides at the same time, it does not occupy space</p></li><li><p><code>@</code> rule</p><ul><li><code>@import &quot;path&quot;</code> to import css files</li><li><code>@charset &quot;UTF-8&quot;;</code> defined browser character encoding set of the css file must be written before import</li><li><code>@font-face{}</code> directive to make a new font</li></ul></li><li><p><code>&lt;img /&gt;</code> tag white border problem solved</p><ul><li>Set the parent element font size to 0, the side effect is that the element font disappears</li><li>Set picture as block box</li><li>Modify aligned baselines</li></ul></li><li><p>Guides - In-depth understanding of fonts Usually 5 guides</p><ul><li>text top, ascent top line</li><li>super upper baseline</li><li>baseline baseline</li><li>sub lower baseline</li><li>text bottom, descent</li></ul></li><li><p>svg (scalable vector graphics) scalable vector graphics</p><ul><li>The picture is written in code</li><li>Zooming will not be distorted, similar to python turtle drawing with code</li><li>Lightweight content</li><li>Instructions <ul><li>Copy the source code directly -img backgroundimg</li><li>embed object iframe</li></ul></li></ul></li><li><p>css data link</p><ul><li>Write the data of the target file directly to the path location</li><li>dataMIME, data (MIME type is the way a file with a certain extension is set to be opened by an application)</li><li>advantage <ul><li>Reduced browser requests and reduced request time</li><li>Facilitates dynamic generation of data</li></ul></li><li>shortcoming <ul><li>Increased the volume of resources, resulting in an increase in the transmission content</li><li>Not conducive to browser caching</li></ul></li><li>Application scenarios <ul><li>But the request for a single image is small, and the image is not suitable for making sprite images for various reasons</li><li>The picture is dynamically generated by other codes, and the picture is small, you can use data link</li></ul></li></ul><div class="language-html ext-html"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">link</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">rel</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;stylesheet&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">href</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;data:text/css,h1{color:blue;}&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">link</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">rel</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;stylesheet&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">href</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;data:text/css;base64,aDF7Y29sb3I6Ymx1ZTt9&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div></li><li><p>Vendor prefix</p><p>-ie <code>-ms-</code></p><ul><li>google safari <code>-webkit-</code></li><li>opera <code>-o-</code></li><li>Firefox <code>-moz-</code></li></ul></li><li><p>Progressive enhancement and graceful degradation</p><ul><li>Write one that works first, then add new styles to the new version</li><li>Write the latest version first, and then deal with the lower version</li></ul></li><li><p>Centered summary</p><ul><li>Horizontal orientation: line box <code>text-align:center</code>, block box fixed width <code>margin:auto</code> <code>justify-content: center;</code></li><li>Vertical orientation: line box <code>line-height</code> <code>vertical-align</code>, block box <code>margin:auto</code> <code>align-items: center;</code></li><li>Positioning legal size <code>position,lrtb = 0,margin:auto</code></li></ul></li><li><p>All-purpose <code>flex</code> and <code>grid</code></p></li><li><p>BEM naming convention block <code>Block-Element__Modifier</code></p></li><li><p><code>caret-color</code> changes the cursor color</p></li><li><p><code>-webkit-tap-highlight-color</code> ios iphone tap color</p></li><li><p>css anchor positioning <code>scroll-behavior:smooth</code> for smooth scrolling</p></li><li><p><code>overflow-anchor</code> scroll position when new content is loaded</p></li><li><p><code>scroll-snap-type</code> defines the critical point of scroll container, automatic callback</p></li><li><p><code>color-scheme</code> adapts to mac black mode</p></li><li><p>div container <code>aspect-ratio: 1/1;</code> aspect ratio is one to one</p></li>`,26);function D(E,C){const a=l("Element"),o=l("ClientOnly"),c=l("BackgroundClip"),r=l("IKun"),d=l("ExternalLinkIcon");return h(),u("div",null,[g,t(o,null,{default:s(()=>[t(a)]),_:1}),f,t(o,null,{default:s(()=>[t(c)]),_:1}),b,t(o,null,{default:s(()=>[t(r)]),_:1}),y,e("ul",null,[_,e("li",null,[e("p",null,[e("a",v,[x,t(d)]),w])]),k])])}var I=p(m,[["render",D],["__file","css.html.vue"]]);export{I as default};
