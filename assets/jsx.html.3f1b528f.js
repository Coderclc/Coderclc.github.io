import{_ as o,o as e,c as t,a as s,b as l,d as n,e as p,r as c}from"./app.a81d06d1.js";const D={},r=s("h1",{id:"jsx",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#jsx","aria-hidden":"true"},"#"),n(" Jsx")],-1),y={id:"vue2",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#vue2","aria-hidden":"true"},"#",-1),C=n(),d={href:"https://github.com/vuejs/jsx-vue2#installation",target:"_blank",rel:"noopener noreferrer"},h=n("Vue2"),u=p(`<h3 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h3><p>Install the plugin:</p><div class="language-bash ext-sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">npm install @vue/babel-preset-jsx @vue/babel-helper-vue-jsx-merge-props</span></span>
<span class="line"></span></code></pre></div><p>Then add the preset to babel.config.js:</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">module</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">exports</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">presets:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;@vue/babel-preset-jsx&#39;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="syntax" tabindex="-1"><a class="header-anchor" href="#syntax" aria-hidden="true">#</a> Syntax</h3><h4 id="content" tabindex="-1"><a class="header-anchor" href="#content" aria-hidden="true">#</a> content</h4><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">hello</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h5 id="with-dynamic-content" tabindex="-1"><a class="header-anchor" href="#with-dynamic-content" aria-hidden="true">#</a> with dynamic content:</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">hello </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">message</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h5 id="when-self-closing" tabindex="-1"><a class="header-anchor" href="#when-self-closing" aria-hidden="true">#</a> When self-closing:</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h5 id="using-components" tabindex="-1"><a class="header-anchor" href="#using-components" aria-hidden="true">#</a> Using components:</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">MyComponent</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;./my-component&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">MyComponent</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">hello</span><span style="color:#808080;">&lt;/</span><span style="color:#4EC9B0;">MyComponent</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="properties-props" tabindex="-1"><a class="header-anchor" href="#properties-props" aria-hidden="true">#</a> Properties/Props</h4><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">type</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;email&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h5 id="with-dynamic-binding" tabindex="-1"><a class="header-anchor" href="#with-dynamic-binding" aria-hidden="true">#</a> with dynamic binding:</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">type</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;email&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">placeholder</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">placeholderText</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h5 id="use-spread-operator-object-needs-to-be-compatible-with-vue-data-objects" tabindex="-1"><a class="header-anchor" href="#use-spread-operator-object-needs-to-be-compatible-with-vue-data-objects" aria-hidden="true">#</a> Use spread operator (object needs to be compatible with Vue data objects):</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">inputAttrs</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">type:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;email&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">placeholder:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Enter your email&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">...{ </span><span style="color:#9CDCFE;">attrs:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">inputAttrs</span><span style="color:#D4D4D4;"> }</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// or</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">attrs</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">type:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;email&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">placeholder:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Enter your email&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">[</span><span style="color:#569CD6;">this</span><span style="color:#9CDCFE;">.title]:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Enter your email&#39;</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">// custom b</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">...</span><span style="color:#9CDCFE;">attrs</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="slot" tabindex="-1"><a class="header-anchor" href="#slot" aria-hidden="true">#</a> slot</h4>`,21),E={id:"slots",tabindex:"-1"},g=s("a",{class:"header-anchor",href:"#slots","aria-hidden":"true"},"#",-1),v=n(),F={href:"https://cn.vuejs.org/v2/api/#vm-slots",target:"_blank",rel:"noopener noreferrer"},x=n("$slots"),b=s("p",null,"Used to access content distributed by the slot. Each named slot has its own property (eg: the contents of v-slot:foo will be found in vm.$slots.foo). The default property includes all nodes not contained in named slots, or v-slot:default .",-1),m={id:"scopedslots",tabindex:"-1"},f=s("a",{class:"header-anchor",href:"#scopedslots","aria-hidden":"true"},"#",-1),k=n(),A={href:"https://cn.vuejs.org/v2/api/#vm-scopedSlots",target:"_blank",rel:"noopener noreferrer"},j=n("$scopedSlots"),w=p(`<p>Used to access scoped slots. For each slot, including the default slot, this object contains a function that returns the corresponding VNode.</p><h5 id="named-slots" tabindex="-1"><a class="header-anchor" href="#named-slots" aria-hidden="true">#</a> Named slots:</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">MyComponent</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">header</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">slot</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;header&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">header</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">header</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">footer</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">slot</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;footer&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">footer</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">footer</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;/</span><span style="color:#4EC9B0;">MyComponent</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  )</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h5 id="scoped-slots" tabindex="-1"><a class="header-anchor" href="#scoped-slots" aria-hidden="true">#</a> Scoped slots:</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">scopedSlots</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">header</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">header</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">header</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">header</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">footer</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">footer</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">footer</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">footer</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">MyComponent</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">scopedSlots</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">scopedSlots</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><p>To use the <code>&lt;template&gt;</code> tag, you must write <code>slot=&quot;default&quot;</code></p><h4 id="directives" tabindex="-1"><a class="header-anchor" href="#directives" aria-hidden="true">#</a> directives</h4><blockquote><p>In the new scaffolding <code>vue-cli4</code>, the support for <code>v-model</code> has been integrated by default and can be used directly. If your project is relatively old, you can also install the plugin <code>babel-plugin-jsx-v-model</code> to support</p></blockquote><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">// two ways to write</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">vModel</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">newTodoText</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-model</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">newTodoText</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><h5 id="using-modifiers" tabindex="-1"><a class="header-anchor" href="#using-modifiers" aria-hidden="true">#</a> Using modifiers:</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">vModel_trim</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">newTodoText</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><p><code>.stop</code> : stop event bubbling, use <code>event.stopPropagation()</code> in <code>JSX</code> instead</p><p><code>.prevent</code>: prevent default behavior, use <code>event.preventDefault()</code> instead in <code>JSX</code></p><p><code>.self</code>: The callback is only fired if the event was fired from the element itself to which the listener was bound</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">event</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;"> !== </span><span style="color:#9CDCFE;">event</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">currentTarget</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><p><code>.enter</code> and <code>keyCode</code>: trigger callback only when a specific key is triggered</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">event</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">keyCode</span><span style="color:#D4D4D4;"> === </span><span style="color:#B5CEA8;">13</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// execute logic</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><p><code>.once, .capture, .passive</code></p><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">   </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">     </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span></span>
<span class="line"><span style="color:#D4D4D4;">       </span><span style="color:#9CDCFE;">on</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">         </span><span style="color:#6A9955;">// .capture</span></span>
<span class="line"><span style="color:#D4D4D4;">         </span><span style="color:#CE9178;">&#39;!click&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$_handleClick</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">         </span><span style="color:#6A9955;">// .once</span></span>
<span class="line"><span style="color:#D4D4D4;">         </span><span style="color:#CE9178;">&#39;~input&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$_handleInput</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">         </span><span style="color:#6A9955;">// .passive</span></span>
<span class="line"><span style="color:#D4D4D4;">         </span><span style="color:#CE9178;">&#39;&amp;mousedown&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$_handleMouseDown</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">         </span><span style="color:#6A9955;">// .capture.once</span></span>
<span class="line"><span style="color:#D4D4D4;">         </span><span style="color:#CE9178;">&#39;~!mouseup&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$_handleMouseUp</span></span>
<span class="line"><span style="color:#D4D4D4;">       }</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#D4D4D4;">     </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">   )</span></span>
<span class="line"><span style="color:#D4D4D4;"> }</span></span>
<span class="line"></span></code></pre></div><h5 id="with-parameters" tabindex="-1"><a class="header-anchor" href="#with-parameters" aria-hidden="true">#</a> with parameters:</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">vOn</span><span style="color:#D4D4D4;">:</span><span style="color:#9CDCFE;">click</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">newTodoText</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><h5 id="using-parameters-and-modifiers" tabindex="-1"><a class="header-anchor" href="#using-parameters-and-modifiers" aria-hidden="true">#</a> Using parameters and modifiers:</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">vOn</span><span style="color:#D4D4D4;">:</span><span style="color:#9CDCFE;">click_stop_prevent</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">newTodoText</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><h5 id="v-on" tabindex="-1"><a class="header-anchor" href="#v-on" aria-hidden="true">#</a> v-on:</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">// The following can be written</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">button</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">vOn</span><span style="color:#D4D4D4;">:</span><span style="color:#9CDCFE;">click</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onClick</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">button</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-on</span><span style="color:#D4D4D4;">:</span><span style="color:#9CDCFE;">click</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onClick</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">button</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">onClick</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onClick</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">button</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">on-click</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onClick</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">button</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">on</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">{</span><span style="color:#CE9178;">&#39;click&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onClick</span><span style="color:#D4D4D4;">}</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// custom event name</span></span>
<span class="line"><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">$emit</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;icon-click&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">button</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">onIconClick</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onClick</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// native modifier</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">button</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">nativeOnClick</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onClick</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// pass parameters</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">button</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">on-click</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onClick</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">bind</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">,</span><span style="color:#9CDCFE;">argument</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// dynamic event name</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">button</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">on</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">{</span><span style="color:#9CDCFE;">[</span><span style="color:#569CD6;">this</span><span style="color:#9CDCFE;">.event]:</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onClick</span><span style="color:#D4D4D4;">}</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// event is automatically passed in as the last parameter</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">button</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">on-click</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">$event</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">event</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">param</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">$event</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// trigger function group</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">button</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">onClick</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">onClick1</span><span style="color:#D4D4D4;">,</span><span style="color:#9CDCFE;">onClick2</span><span style="color:#D4D4D4;">]</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><h5 id="v-html" tabindex="-1"><a class="header-anchor" href="#v-html" aria-hidden="true">#</a> v-html:</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">p</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">domPropsInnerHTML</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">html</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><h5 id="v-text" tabindex="-1"><a class="header-anchor" href="#v-text" aria-hidden="true">#</a> v-text</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">p</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">domPropsInnerText</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">text</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><h5 id="v-show" tabindex="-1"><a class="header-anchor" href="#v-show" aria-hidden="true">#</a> v-show</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">p</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">vShow</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{true}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">p</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-show</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{true}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><h5 id="sync" tabindex="-1"><a class="header-anchor" href="#sync" aria-hidden="true">#</a> .sync</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">My-Component</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">on</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">{ </span><span style="color:#CE9178;">&#39;update:value&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">onInput</span><span style="color:#D4D4D4;"> }</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><h5 id="v-if-and-v-for" tabindex="-1"><a class="header-anchor" href="#v-if-and-v-for" aria-hidden="true">#</a> v-if and v-for</h5><p>Use js native capabilities</p><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">thead</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hideHeader</span><span style="color:#D4D4D4;"> ? </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;"> : (</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">thead</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">weekDays</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">day</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">th</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">day</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">day</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">th</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    ))</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">thead</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre></div><h4 id="functional-components" tabindex="-1"><a class="header-anchor" href="#functional-components" aria-hidden="true">#</a> Functional components</h4><p>Translate JSX-returning arrow functions into functional components, when they are the default exports:</p><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> ({ </span><span style="color:#9CDCFE;">props</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">hello </span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">props</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">message</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>or PascalCase variable declaration:</p><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">HelloWorld</span><span style="color:#D4D4D4;"> = ({ </span><span style="color:#9CDCFE;">props</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">hello </span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">props</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">message</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="vue3" tabindex="-1"><a class="header-anchor" href="#vue3" aria-hidden="true">#</a> Vue3</h2><h3 id="installation-1" tabindex="-1"><a class="header-anchor" href="#installation-1" aria-hidden="true">#</a> Installation</h3><p>Install the plugin</p><div class="language-bash ext-sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">npm install @vue/babel-plugin-jsx -D</span></span>
<span class="line"></span></code></pre></div><p>Configure Babel</p><div class="language-json ext-json"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;plugins&quot;</span><span style="color:#D4D4D4;">: [</span><span style="color:#CE9178;">&quot;@vue/babel-plugin-jsx&quot;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><p>The following configurations are available</p><div class="language-json ext-json"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;plugins&quot;</span><span style="color:#D4D4D4;">: [</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;@vue/babel-plugin-jsx&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// ...</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  ]</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="transformon-type-boolean" tabindex="-1"><a class="header-anchor" href="#transformon-type-boolean" aria-hidden="true">#</a> transformOn Type: boolean</h4><p>Default: false</p><p>Convert on: { click: xx } to onClick: xxx</p><h4 id="optimize-type-boolean" tabindex="-1"><a class="header-anchor" href="#optimize-type-boolean" aria-hidden="true">#</a> optimize Type: boolean</h4><p>Default: false</p><p>Whether to enable optimization. If you are not familiar with Vue 3, it is not recommended to enable</p><h4 id="iscustomelement" tabindex="-1"><a class="header-anchor" href="#iscustomelement" aria-hidden="true">#</a> isCustomElement</h4><p>Type: (tag: string) =&gt; boolean</p><p>Default: undefined</p><p>custom element</p><h4 id="mergeprops-type-boolean" tabindex="-1"><a class="header-anchor" href="#mergeprops-type-boolean" aria-hidden="true">#</a> mergeProps Type: boolean</h4><p>Default: true</p><p>Merged class / style / onXXX handlers</p><h4 id="enableobjectslots" tabindex="-1"><a class="header-anchor" href="#enableobjectslots" aria-hidden="true">#</a> enableObjectSlots</h4><p>Use enableObjectSlots (mentioned later in the documentation). Although it is easier to use in JSX, it will add some runtime conditional judgments of _isSlot, which will increase the size of your project. v-slots can still be used even if you turn off enableObjectSlots</p><h4 id="pragmas" tabindex="-1"><a class="header-anchor" href="#pragmas" aria-hidden="true">#</a> pragmas</h4><p>Type: string</p><p>Default: createVNode</p><p>Replace the function used when compiling JSX expressions</p><h3 id="syntax-1" tabindex="-1"><a class="header-anchor" href="#syntax-1" aria-hidden="true">#</a> Syntax</h3><h4 id="content-1" tabindex="-1"><a class="header-anchor" href="#content-1" aria-hidden="true">#</a> content</h4><p>functional components</p><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">App</span><span style="color:#D4D4D4;"> = () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>use in render</p><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">App</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Vue 3.0</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">withModifiers</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">defineComponent</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">App</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">defineComponent</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setup</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">count</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">ref</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">inc</span><span style="color:#D4D4D4;"> = () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">++</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">onClick</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#DCDCAA;">withModifiers</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">inc</span><span style="color:#D4D4D4;">, [</span><span style="color:#CE9178;">&#39;self&#39;</span><span style="color:#D4D4D4;">])</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre></div><p>Fragment</p><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">App</span><span style="color:#D4D4D4;"> = () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">I&#39;m</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Fragment</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;/&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre></div><h4 id="properties-props-1" tabindex="-1"><a class="header-anchor" href="#properties-props-1" aria-hidden="true">#</a> Properties/Props</h4><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">App</span><span style="color:#D4D4D4;"> = () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">type</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;email&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><p>Dynamic binding:</p><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">placeholderText</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;email&#39;</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">App</span><span style="color:#D4D4D4;"> = () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">type</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;email&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">placeholder</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">placeholderText</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><h4 id="directives-1" tabindex="-1"><a class="header-anchor" href="#directives-1" aria-hidden="true">#</a> directives</h4><h5 id="v-show-1" tabindex="-1"><a class="header-anchor" href="#v-show-1" aria-hidden="true">#</a> v-show</h5><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">App</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">data</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">visible:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;"> }</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">render</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-show</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">visible</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h5 id="v-model" tabindex="-1"><a class="header-anchor" href="#v-model" aria-hidden="true">#</a> v-model</h5><blockquote><p>Note: if you want to use arg, the second parameter needs to be a string</p></blockquote><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-model</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">val</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-model</span><span style="color:#D4D4D4;">:</span><span style="color:#9CDCFE;">argument</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">val</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">input</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-model</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">, [</span><span style="color:#CE9178;">&#39;modifier&#39;</span><span style="color:#D4D4D4;">]]</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">A</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-model</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;argument&#39;</span><span style="color:#D4D4D4;">, [</span><span style="color:#CE9178;">&#39;modifier&#39;</span><span style="color:#D4D4D4;">]]</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><p>will compile to:</p><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">h</span><span style="color:#D4D4D4;">(</span><span style="color:#4FC1FF;">A</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">argument:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">argumentModifiers:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">modifier:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">true</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;onUpdate:argument&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">$event</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">$event</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre></div><h5 id="v-models-deprecated-since-1-1-0" tabindex="-1"><a class="header-anchor" href="#v-models-deprecated-since-1-1-0" aria-hidden="true">#</a> v-models (deprecated since 1.1.0)</h5><blockquote><p>Note: You should pass a 2D array to v-models.</p></blockquote><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">A</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-models</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">[[</span><span style="color:#9CDCFE;">foo</span><span style="color:#D4D4D4;">], [</span><span style="color:#9CDCFE;">bar</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bar&#39;</span><span style="color:#D4D4D4;">]]</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">A</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">v-models</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">[</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#9CDCFE;">foo</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#9CDCFE;">bar</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bar&#39;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">  ]</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">A</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">v-models</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">[</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#9CDCFE;">foo</span><span style="color:#D4D4D4;">, [</span><span style="color:#CE9178;">&#39;modifier&#39;</span><span style="color:#D4D4D4;">]],</span></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#9CDCFE;">bar</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bar&#39;</span><span style="color:#D4D4D4;">, [</span><span style="color:#CE9178;">&#39;modifier&#39;</span><span style="color:#D4D4D4;">]]</span></span>
<span class="line"><span style="color:#D4D4D4;">  ]</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#808080;">/&gt;</span></span>
<span class="line"></span></code></pre></div><p>will compile to:</p><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">h</span><span style="color:#D4D4D4;">(</span><span style="color:#4FC1FF;">A</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">modelValue:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">foo</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">modelModifiers:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">modifier:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">true</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;onUpdate:modelValue&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">$event</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">foo</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">$event</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">bar:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">bar</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">barModifiers:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">modifier:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">true</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;onUpdate:bar&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">$event</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">bar</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">$event</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre></div><h5 id="custom-instructions" tabindex="-1"><a class="header-anchor" href="#custom-instructions" aria-hidden="true">#</a> Custom Instructions</h5><p>It is recommended to use only argument</p><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">App</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">directives:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">custom:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">customDirective</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setup</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">a</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-custom</span><span style="color:#D4D4D4;">:</span><span style="color:#9CDCFE;">arg</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">val</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">App</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">directives:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">custom:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">customDirective</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setup</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">a</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-custom</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;arg&#39;</span><span style="color:#D4D4D4;">, [</span><span style="color:#CE9178;">&#39;a&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;b&#39;</span><span style="color:#D4D4D4;">]]</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="slot-1" tabindex="-1"><a class="header-anchor" href="#slot-1" aria-hidden="true">#</a> slot</h4><blockquote><p>Note: In jsx, v-slots should be used instead of v-slot</p></blockquote><div class="language-jsx ext-jsx"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">A</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">props</span><span style="color:#D4D4D4;">, { </span><span style="color:#9CDCFE;">slots</span><span style="color:#D4D4D4;"> }) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">h1</span><span style="color:#808080;">&gt;</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">slots</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">default</span><span style="color:#D4D4D4;"> ? </span><span style="color:#9CDCFE;">slots</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">default</span><span style="color:#D4D4D4;">() : </span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">h1</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">h2</span><span style="color:#808080;">&gt;</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">slots</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">bar</span><span style="color:#D4D4D4;">?.()</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">h2</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;/&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">App</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setup</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">slots</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">bar</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">B</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">A</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-slots</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">slots</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">A</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;/</span><span style="color:#4EC9B0;">A</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// or</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">App</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setup</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">slots</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">default</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">A</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">bar</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">B</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">A</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-slots</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">{</span><span style="color:#9CDCFE;">slots</span><span style="color:#569CD6;">}</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// Alternatively, you can use object slots when \`enableObjectSlots\` is not \`false\`</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">App</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setup</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">A</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#DCDCAA;">default</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">A</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#DCDCAA;">bar</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">B</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">          }</span><span style="color:#569CD6;">}</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#808080;">&lt;/</span><span style="color:#4EC9B0;">A</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#808080;">&lt;</span><span style="color:#4EC9B0;">B</span><span style="color:#808080;">&gt;</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#569CD6;">}</span><span style="color:#808080;">&lt;/</span><span style="color:#4EC9B0;">B</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;/&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="using-in-typescript" tabindex="-1"><a class="header-anchor" href="#using-in-typescript" aria-hidden="true">#</a> Using in TypeScript</h4><p><code>tsconfig.json:</code></p><div class="language-json ext-json"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">&quot;compilerOptions&quot;</span><span style="color:#D4D4D4;">: {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;jsx&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;preserve&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="review" tabindex="-1"><a class="header-anchor" href="#review" aria-hidden="true">#</a> Review</h2><ul><li><p>The jsx syntax part of Vue3 continues Vue2</p></li><li><p>jsx is to render xml in render, object is displayed as undefined</p></li><li><p>JSX is a format that combines Javascript and XML. React invented JSX, which uses HTML syntax to create a virtual DOM. When the <code>&lt;</code> symbol is encountered, JSX is parsed as HTML, and when the <code>{</code> symbol is encountered, it is parsed as JavaScript.</p></li><li><p>Vue recommends using templates to create your HTML in most cases. However, in some scenarios, you really need the full programming capabilities of JavaScript. Then you can use render functions, which are closer to the compiler than templates.</p></li><li><p>Because jsx is the rendering layer, you can directly use some new features, such as optional chain <code>?.</code>, and use in templates requires additional dependencies</p></li></ul>`,111);function _(q,T){const a=c("ExternalLinkIcon");return e(),t("div",null,[r,s("h2",y,[i,C,s("a",d,[h,l(a)])]),u,s("h5",E,[g,v,s("a",F,[x,l(a)])]),b,s("h5",m,[f,k,s("a",A,[j,l(a)])]),w])}var S=o(D,[["render",_],["__file","jsx.html.vue"]]);export{S as default};
