import{_ as t,o as l,c as p,a as s,b as a,d as e,e as o,r as c}from"./app.a81d06d1.js";const r={},i=s("h1",{id:"github",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#github","aria-hidden":"true"},"#"),e(" Github")],-1),d={id:"github-docs",tabindex:"-1"},h=s("a",{class:"header-anchor",href:"#github-docs","aria-hidden":"true"},"#",-1),D=e(),y={href:"https://docs.github.com/cn",target:"_blank",rel:"noopener noreferrer"},_=e("Github Docs"),u={id:"github-actions",tabindex:"-1"},m=s("a",{class:"header-anchor",href:"#github-actions","aria-hidden":"true"},"#",-1),b=e(),g={href:"https://docs.github.com/cn/actions",target:"_blank",rel:"noopener noreferrer"},f=e("Github Actions"),k=s("h3",{id:"github-pages-cname-missing-issue",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#github-pages-cname-missing-issue","aria-hidden":"true"},"#"),e(" Github Pages CNAME missing issue")],-1),C={href:"http://doc.yonyoucloud.com/doc/wiki/project/github-pages-basics/cname-file.html",target:"_blank",rel:"noopener noreferrer"},E=e("Add the CNAME file to your repository"),w=s("h3",{id:"pnpm-command-not-found",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#pnpm-command-not-found","aria-hidden":"true"},"#"),e(" Pnpm: command not found")],-1),v=e("Pnpm in Github Action needs to be manually installed "),x={href:"https://github.com/marketplace/actions/setup-pnpm",target:"_blank",rel:"noopener noreferrer"},A=e("Setup pnpm"),S=o(`<h3 id="github-action-workflow-can-t-work" tabindex="-1"><a class="header-anchor" href="#github-action-workflow-can-t-work" aria-hidden="true">#</a> Github Action Workflow Can&#39;t work</h3><div class="language-yaml ext-yml"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">on</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;"># trigger deployment whenever push to master branch</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">push</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">branches</span><span style="color:#D4D4D4;">: [</span><span style="color:#CE9178;">master</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;"># Manually trigger deployment</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">workflow_dispatch</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"></span></code></pre></div><div class="language-bash ext-sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">git push // \xD7 cannot trigger workflow</span></span>
<span class="line"><span style="color:#D4D4D4;">git push origin master // \u221A Need to specify branch</span></span>
<span class="line"></span></code></pre></div><h3 id="cache-dependencies-to-speed-up-workflow" tabindex="-1"><a class="header-anchor" href="#cache-dependencies-to-speed-up-workflow" aria-hidden="true">#</a> Cache dependencies to speed up workflow</h3><div class="language-yaml ext-yml"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;"># cache node_modules</span></span>
<span class="line"><span style="color:#569CD6;">name</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">Cache dependencies</span></span>
<span class="line"><span style="color:#569CD6;">uses</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">actions/cache@v2</span></span>
<span class="line"><span style="color:#569CD6;">id</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">pnpm-cache</span></span>
<span class="line"><span style="color:#569CD6;">with</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">path</span><span style="color:#D4D4D4;">: </span><span style="color:#C586C0;">|</span></span>
<span class="line"><span style="color:#CE9178;">    **/node_modules</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">key</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">\${{ runner.os }}-build-\${{ env.cache-name }}-\${{ hashFiles(&#39;**/pnpm-lock.yaml&#39;) }}</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">restore-keys</span><span style="color:#D4D4D4;">: </span><span style="color:#C586C0;">|</span></span>
<span class="line"><span style="color:#CE9178;">    \${{ runner.os }}-build-\${{ env.cache-name }}-</span></span>
<span class="line"><span style="color:#CE9178;">    \${{ runner.os }}-build-</span></span>
<span class="line"><span style="color:#CE9178;">    \${{ runner.os }}-</span></span>
<span class="line"></span></code></pre></div><p><code>restore-keys</code> caches subsequent steps and uses if to determine whether dependencies are installed</p>`,6),$={id:"ssh-deploy",tabindex:"-1"},G=s("a",{class:"header-anchor",href:"#ssh-deploy","aria-hidden":"true"},"#",-1),N=e(),V={href:"https://github.com/easingthemes/ssh-deploy",target:"_blank",rel:"noopener noreferrer"},P=e("SSH Deploy"),B=o("<p>ssh link remote server automatic deployment</p><ol><li><p>ssh is created in PEM format, otherwise an error will be reported <code>Load key &quot;/home/runner/.ssh/deploy_key&quot;: invalid format</code></p></li><li><p>Write the public key into <code>.ssh/authorized_keys</code>, <code>vim ~/.ssh/authorized_keys</code>, and add it to github SSH keys</p></li><li><p>The private key is uploaded in the workflow as <code>SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}</code></p></li><li><p>Use github Secrets actions environment to add sensitive data</p></li></ol>",2),H={id:"gitpod",tabindex:"-1"},M=s("a",{class:"header-anchor",href:"#gitpod","aria-hidden":"true"},"#",-1),q=e(),I={href:"https://www.gitpod.io/",target:"_blank",rel:"noopener noreferrer"},L=e("Gitpod"),R=o(`<p>Automated and off-the-shelf code development environments</p><div class="language-yaml ext-yml"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">ports</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">  - </span><span style="color:#569CD6;">port</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">2333</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">onOpen</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">open-preview</span></span>
<span class="line"><span style="color:#569CD6;">tasks</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">  - </span><span style="color:#569CD6;">init</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">yarn</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">command</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">yarn dev</span></span>
<span class="line"></span></code></pre></div>`,2);function T(z,K){const n=c("ExternalLinkIcon");return l(),p("div",null,[i,s("h2",d,[h,D,s("a",y,[_,a(n)])]),s("h2",u,[m,b,s("a",g,[f,a(n)])]),k,s("p",null,[s("a",C,[E,a(n)])]),w,s("p",null,[v,s("a",x,[A,a(n)])]),S,s("h3",$,[G,N,s("a",V,[P,a(n)])]),B,s("h2",H,[M,q,s("a",I,[L,a(n)])]),R])}var Y=t(r,[["render",T],["__file","github.html.vue"]]);export{Y as default};
